name: Force Update Fork

on:
  push:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天自动更新

jobs:
  nuclear-update:
    runs-on: ubuntu-latest
    steps:
      # 1. 设置环境变量
      - name: Set up environment
        run: |
          echo "GH_USER=ddkwork" >> $GITHUB_ENV
          echo "PATCH_FILE=dropFile.patch" >> $GITHUB_ENV
          echo "UPSTREAM_URL=https://github.com/gioui/gio" >> $GITHUB_ENV
          echo "FORK_URL=https://github.com/$GH_USER/gio" >> $GITHUB_ENV

      # 2. 克隆上游仓库
      - name: Clone upstream
        run: |
          git clone --depth=1 $UPSTREAM_URL gio
          cd gio
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
        shell: bash

      # 3. 检出当前仓库获取补丁文件
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          path: current-repo

      # 4. 认证 GitHub CLI
      - name: Authenticate gh CLI
        run: |
          gh auth status
          gh auth login --with-token <<< "${{ secrets.tk }}"
        env:
          GH_TOKEN: ${{ secrets.tk }}
        shell: bash

      # 5. 应用补丁并推送
      - name: Apply patch and push
        run: |
          echo "应用补丁 $PATCH_FILE..."
          cd gio
          
          # 复制补丁文件
          cp ../current-repo/$PATCH_FILE .
          
          # 应用补丁
          git apply $PATCH_FILE
          
          # 添加并提交更改
          git add .
          git commit -m "暴力更新 $(date +'%Y-%m-%d %H:%M')"
          
          # 设置远程地址 (使用HTTPS)
          git remote set-url origin $FORK_URL
          
          # 使用gh cli强制推送
          echo "强制推送到 $FORK_URL..."
          gh repo set-default $FORK_URL
          git push --force origin main
          
          # 清理
          rm $PATCH_FILE
          echo "更新完成!"
        shell: bash